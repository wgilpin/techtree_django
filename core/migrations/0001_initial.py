# Generated by Django 5.2 on 2025-04-02 13:31

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "module_index",
                    models.IntegerField(
                        help_text="The sequential index of this module within the syllabus."
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="The title of the module.", max_length=255
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True,
                        help_text="A brief summary of the module content.",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the module was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the module was last updated.",
                    ),
                ),
            ],
            options={
                "ordering": ["syllabus", "module_index"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lesson_index",
                    models.IntegerField(
                        help_text="The sequential index of this lesson within the module."
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="The title of the lesson.", max_length=255
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True,
                        help_text="A brief summary of the lesson content.",
                        null=True,
                    ),
                ),
                (
                    "duration",
                    models.CharField(
                        blank=True,
                        help_text="Estimated duration of the lesson (e.g., '15 minutes').",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the lesson was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the lesson was last updated.",
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        help_text="The module this lesson belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="core.module",
                    ),
                ),
            ],
            options={
                "ordering": ["module", "lesson_index"],
            },
        ),
        migrations.CreateModel(
            name="Syllabus",
            fields=[
                (
                    "syllabus_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        help_text="The main topic of the syllabus.", max_length=255
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        help_text="The target knowledge level (e.g., beginner, advanced).",
                        max_length=50,
                    ),
                ),
                (
                    "user_entered_topic",
                    models.TextField(
                        blank=True,
                        help_text="The original topic string entered by the user, if different.",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the syllabus was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the syllabus was last updated.",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user for whom this syllabus was generated (if any).",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Syllabus",
                "verbose_name_plural": "Syllabi",
            },
        ),
        migrations.AddField(
            model_name="module",
            name="syllabus",
            field=models.ForeignKey(
                help_text="The syllabus this module belongs to.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="modules",
                to="core.syllabus",
            ),
        ),
        migrations.CreateModel(
            name="UserAssessment",
            fields=[
                (
                    "assessment_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        help_text="The topic of the assessment.", max_length=255
                    ),
                ),
                (
                    "knowledge_level",
                    models.CharField(
                        help_text="The assessed knowledge level (e.g., beginner, intermediate).",
                        max_length=50,
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        blank=True,
                        help_text="The numerical score achieved, if applicable.",
                        null=True,
                    ),
                ),
                (
                    "question_history",
                    models.JSONField(
                        blank=True,
                        help_text="JSON containing the history of questions asked.",
                        null=True,
                    ),
                ),
                (
                    "response_history",
                    models.JSONField(
                        blank=True,
                        help_text="JSON containing the history of user responses.",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the assessment was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the assessment was last updated.",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who took the assessment.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Assessment",
                "verbose_name_plural": "User Assessments",
            },
        ),
        migrations.CreateModel(
            name="UserProgress",
            fields=[
                (
                    "progress_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "module_index",
                    models.IntegerField(
                        help_text="Original module index (potentially redundant if lesson FK is used)."
                    ),
                ),
                (
                    "lesson_index",
                    models.IntegerField(
                        help_text="Original lesson index (potentially redundant if lesson FK is used)."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                        ],
                        default="not_started",
                        help_text="The current completion status of the lesson for the user.",
                        max_length=20,
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        blank=True,
                        help_text="Score achieved by the user for this lesson, if applicable.",
                        null=True,
                    ),
                ),
                (
                    "lesson_state_json",
                    models.JSONField(
                        blank=True,
                        help_text="JSON blob storing conversational state or other lesson-specific data.",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the progress record was first created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the progress record was last updated.",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        blank=True,
                        help_text="The specific lesson the progress relates to.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.lesson",
                    ),
                ),
                (
                    "syllabus",
                    models.ForeignKey(
                        help_text="The syllabus the progress relates to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.syllabus",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user whose progress is being tracked.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Progress",
                "verbose_name_plural": "User Progress Records",
            },
        ),
        migrations.CreateModel(
            name="ConversationHistory",
            fields=[
                (
                    "message_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        help_text="Timestamp when the message was recorded.",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("assistant", "Assistant"),
                            ("system", "System"),
                        ],
                        help_text="The role of the sender (user, assistant, system).",
                        max_length=20,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("chat", "Chat Message"),
                            ("exercise_prompt", "Exercise Prompt"),
                            ("exercise_response", "Exercise Response"),
                            ("system_update", "System Update"),
                        ],
                        default="chat",
                        help_text="The type or context of the message.",
                        max_length=50,
                    ),
                ),
                (
                    "content",
                    models.TextField(help_text="The textual content of the message."),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="Optional JSON blob for additional message metadata.",
                        null=True,
                    ),
                ),
                (
                    "progress",
                    models.ForeignKey(
                        help_text="The user progress record this message belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversation_history",
                        to="core.userprogress",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation History Message",
                "verbose_name_plural": "Conversation History",
                "ordering": ["timestamp"],
            },
        ),
        migrations.CreateModel(
            name="LessonContent",
            fields=[
                (
                    "content_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "content",
                    models.JSONField(
                        help_text="The structured content of the lesson (e.g., text, exercises)."
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the content was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the content was last updated.",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        help_text="The lesson this content belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_items",
                        to="core.lesson",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lesson Content",
                "verbose_name_plural": "Lesson Contents",
                "indexes": [
                    models.Index(
                        fields=["lesson"], name="core_lesson_lesson__36844c_idx"
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="lesson",
            index=models.Index(
                fields=["module"], name="core_lesson_module__f97657_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="lesson",
            unique_together={("module", "lesson_index")},
        ),
        migrations.AddIndex(
            model_name="syllabus",
            index=models.Index(
                fields=["topic", "level"], name="core_syllab_topic_da9628_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="syllabus",
            index=models.Index(fields=["user"], name="core_syllab_user_id_ae63e9_idx"),
        ),
        migrations.AddIndex(
            model_name="module",
            index=models.Index(
                fields=["syllabus"], name="core_module_syllabu_fef456_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="module",
            unique_together={("syllabus", "module_index")},
        ),
        migrations.AddIndex(
            model_name="userassessment",
            index=models.Index(fields=["user"], name="core_useras_user_id_540e84_idx"),
        ),
        migrations.AddIndex(
            model_name="userprogress",
            index=models.Index(fields=["user"], name="core_userpr_user_id_8db698_idx"),
        ),
        migrations.AddIndex(
            model_name="userprogress",
            index=models.Index(
                fields=["syllabus"], name="core_userpr_syllabu_4a85db_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprogress",
            index=models.Index(
                fields=["user", "syllabus"], name="core_userpr_user_id_0efd36_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userprogress",
            index=models.Index(
                fields=["lesson"], name="core_userpr_lesson__44d521_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userprogress",
            unique_together={("user", "syllabus", "module_index", "lesson_index")},
        ),
        migrations.AddIndex(
            model_name="conversationhistory",
            index=models.Index(
                fields=["progress"], name="core_conver_progres_219c7c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationhistory",
            index=models.Index(
                fields=["timestamp"], name="core_conver_timesta_d9f75a_idx"
            ),
        ),
    ]
