"""Defines the state dictionary for the lesson interaction AI graph."""

from typing import TypedDict, List, Dict, Any, Optional

# Based on usage in original lessons_graph.py and potential node needs
class LessonState(TypedDict, total=False):
    """Represents the state passed between nodes in the lesson interaction graph."""

    # Core context (likely loaded initially by the service)
    user_id: Optional[str]
    lesson_id: int
    lesson_topic: str
    lesson_title: str
    lesson_exposition: str # Main content text
    user_knowledge_level: str # e.g., 'beginner'

    # Interaction state
    current_interaction_mode: str # e.g., 'chatting', 'request_exercise', 'submit_answer'
    last_user_message: str # The message currently being processed
    conversation_history: List[Dict[str, str]] # List of {'role': 'user'/'assistant', 'content': '...'}


    # Active task state
    active_exercise: Optional[Dict[str, Any]] # Holds the current exercise dict
    active_assessment: Optional[Dict[str, Any]] # Holds the current assessment question dict
    potential_answer: Optional[str] # Holds the user's submitted answer temporarily
    # AI response/output from nodes
    intent: str # Classified intent of the user message
    new_assistant_message: Optional[str] # Response generated by chat node
    exercise_prompt: Optional[str] # Generated exercise text
    assessment_prompt: Optional[str] # Generated assessment text
    evaluation_feedback: Optional[str] # Feedback on submitted answer
    score_update: Optional[float] # Score change based on evaluation

    # Temporary context for graph execution (added/removed by LessonAI class)
    history_context: Optional[List[Dict[str, str]]] # Used to pass history to nodes

    # Error handling
    error_message: Optional[str]
    syllabus: Optional[Dict[str, Any]]